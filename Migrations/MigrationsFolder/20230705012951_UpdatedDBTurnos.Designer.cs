// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using refShop_DEV.Models.MyDbContext;

#nullable disable

namespace refShop_DEV.Migrations.MigrationsFolder
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230705012951_UpdatedDBTurnos")]
    partial class UpdatedDBTurnos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("refShop_DEV.Models.Login.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("refShop_DEV.Models.Login.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.RolePermissions", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime?>("creado_el")
                        .HasColumnType("datetime2");

                    b.Property<int?>("creado_por")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mostrar_en_sitio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("creado_por");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreadoEl")
                        .HasColumnType("datetime2")
                        .HasColumnName("creado_el");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int")
                        .HasColumnName("creado_por");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMozo")
                        .HasColumnType("int")
                        .HasColumnName("id_mozo");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<DateTime>("ModificadoEl")
                        .HasColumnType("datetime2")
                        .HasColumnName("modificado_el");

                    b.Property<int>("ModificadoPor")
                        .HasColumnType("int")
                        .HasColumnName("modificado_por");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPor");

                    b.HasIndex("IdMozo");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("ModificadoPor");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMesa")
                        .HasColumnType("int");

                    b.Property<int>("IdMesaNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("IdPlato")
                        .HasColumnType("int");

                    b.Property<int>("IdPlatoNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdMesaNavigationId");

                    b.HasIndex("IdPlatoNavigationId");

                    b.HasIndex("IdUsuarioNavigationId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Plato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Activo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoriaNavigationid")
                        .HasColumnType("int");

                    b.Property<int>("IdPromocion")
                        .HasColumnType("int");

                    b.Property<int>("IdPromocionNavigationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaNavigationid");

                    b.HasIndex("IdPromocionNavigationId");

                    b.ToTable("Platos");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AplicadoPor")
                        .HasColumnType("int");

                    b.Property<int>("AplicadoPorNavigationId")
                        .HasColumnType("int");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AplicadoPorNavigationId");

                    b.ToTable("Promociones");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Turno", b =>
                {
                    b.Property<int>("IDTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDTurno"), 1L, 1);

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Dias_Laborales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDEmpleado")
                        .HasColumnType("int");

                    b.HasKey("IDTurno");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("refShop_DEV.Models.Login.Log", b =>
                {
                    b.HasOne("refShop_DEV.Models.Login.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("refShop_DEV.Models.Login.User", b =>
                {
                    b.HasOne("refShop_DEV.Models.Permission.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.RolePermissions", b =>
                {
                    b.HasOne("refShop_DEV.Models.Permission.Permissions", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Permission.UserRole", "UserRole")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Categoria", b =>
                {
                    b.HasOne("refShop_DEV.Models.Login.User", "IdUsuarioNavigation")
                        .WithMany("Categorias")
                        .HasForeignKey("creado_por");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Mesa", b =>
                {
                    b.HasOne("refShop_DEV.Models.Login.User", "CreadoPorNavigation")
                        .WithMany("MesasCreadas")
                        .HasForeignKey("CreadoPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Login.User", "IdMozoNavigation")
                        .WithMany("MesasMozo")
                        .HasForeignKey("IdMozo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Login.User", "IdUsuarioNavigation")
                        .WithMany("MesasAsociadas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Login.User", "ModificadoPorNavigation")
                        .WithMany("MesasModificadas")
                        .HasForeignKey("ModificadoPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreadoPorNavigation");

                    b.Navigation("IdMozoNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("ModificadoPorNavigation");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Pedido", b =>
                {
                    b.HasOne("refShop_DEV.Models.Restaurant.Mesa", "IdMesaNavigation")
                        .WithMany()
                        .HasForeignKey("IdMesaNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Restaurant.Plato", "IdPlatoNavigation")
                        .WithMany()
                        .HasForeignKey("IdPlatoNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Login.User", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuarioNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdMesaNavigation");

                    b.Navigation("IdPlatoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Plato", b =>
                {
                    b.HasOne("refShop_DEV.Models.Restaurant.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoriaNavigationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("refShop_DEV.Models.Restaurant.Promocion", "IdPromocionNavigation")
                        .WithMany()
                        .HasForeignKey("IdPromocionNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdPromocionNavigation");
                });

            modelBuilder.Entity("refShop_DEV.Models.Restaurant.Promocion", b =>
                {
                    b.HasOne("refShop_DEV.Models.Login.User", "AplicadoPorNavigation")
                        .WithMany()
                        .HasForeignKey("AplicadoPorNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AplicadoPorNavigation");
                });

            modelBuilder.Entity("refShop_DEV.Models.Login.User", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Logs");

                    b.Navigation("MesasAsociadas");

                    b.Navigation("MesasCreadas");

                    b.Navigation("MesasModificadas");

                    b.Navigation("MesasMozo");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.Permissions", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("refShop_DEV.Models.Permission.UserRole", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
